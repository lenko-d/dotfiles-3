export EDITOR="/usr/local/bin/vim"

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
alias ls='ls -GFh'

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

if [ -f $HOME/.nvm/nvm.sh ]; then
  source $HOME/.nvm/nvm.sh
fi

# Bash Completion
if [ -f `brew --prefix`/etc/bash_completion ]; then
  . `brew --prefix`/etc/bash_completion
fi

# Tmuxinator Completion
if [ -f ~/.dotfiles/lib/tmuxinator.bash ]; then
  source ~/.dotfiles/lib/tmuxinator.bash
fi

# Docker Completion
if [ -f ~/.dotfiles/lib/docker-bash-completion.bash ]; then
  source ~/.dotfiles/lib/docker-bash-completion.bash
fi

source ~/.dotfiles/vim/bundle/gruvbox/gruvbox_256palette_osx.sh

# Load in the git branch prompt script.
source ~/.git-prompt.sh

PS1='\[\033[0;31m\]\w\[\033[0;33m\]$(__git_ps1)\[\e[0m\]$ '

source ~/.git_aliases

function setjdk() {
  if [ $# -ne 0 ]; then
    removeFromPath '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]; then
      removeFromPath $JAVA_HOME/bin
    fi
    export JAVA_HOME=`/usr/libexec/java_home -v $@`
    export PATH=$JAVA_HOME/bin:$PATH
  fi
}
function removeFromPath() {
  export PATH=$(echo $PATH | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}
# setjdk 1.8 || echo "ERROR: JDK could not be set!"

export PATH="$PATH:$HOME/.cabal/bin"

function ios() {
  xcrun instruments -w "iPhone 5s (8.1 Simulator)"
}
