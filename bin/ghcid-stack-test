#!/bin/bash

# Program:     ghcid-stack-test
# Description: Convenient wrapper for running Stack project test suites on file
#              changes, using the `ghcid` program.
# Author:      Oskar Wickstr√∂m<oskar.wickstrom@gmail.com>

echoerr() {
  echo "$@" 1>&2;
}

usage() {
  cat 1>&2 <<EOM
Usage:

  $(basename "$0") [TARGET]

Arguments:

  TARGET
    A test suite target, e.g. \`my-project:test:my-tests\`. Only required when
    there are multiple test targets in a project.

EOM
}

# The user's chosen target, if specified.
TARGET=$1

# First, ask Stack for which targets are available to choose.
TEST_TARGETS=($(stack ide targets 2>&1 | egrep --color=never "[^:]+:test:[^:]+" | sed 's/^/  /' | tr '\n' ' '))

if [ "${#TEST_TARGETS[@]}" -eq 0 ]; then

  # We can't run without ANY test target.
  echoerr "There are no test targets in the project!"
  exit 1
fi

if [ -z "$TARGET" ]; then

  if [ "${#TEST_TARGETS[@]}" -eq 1 ]; then
    # When we have only one target, and the user haven't specified any explicit
    # target, we just use that.
    TARGET="${TEST_TARGETS[0]}"
  else
    echoerr "Available targets:"
    echoerr ""

    for test_target in "${TEST_TARGETS[@]}"; do
      echoerr "  $test_target"
    done

    echoerr
    usage
    exit 1
  fi

fi

# Start `ghcid` and invoke main on each reload.
ghcid \
  -c "stack ghci --test --main-is=$TARGET" \
  --warnings \
  --test=":main" \
  --reload test \
  --reload src \
  --restart ./*.cabal \
  --restart ./stack.yaml
